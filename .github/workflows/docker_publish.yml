name: Build and push new Docker image
on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17 with Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from pom.xml
        id: extract_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Debug extracted version
        run: echo "Extracted version:${{ env.VERSION }}"

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and tag Docker image
        run: |
          DOCKER_BUILDKIT=1 docker build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -t ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:latest ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:latest ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:${{ env.VERSION }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/imagegenerator-client:${{ env.VERSION }}

